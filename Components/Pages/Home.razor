@page "/home"
@using BankMauiApp.Models
@using static BankMauiApp.Components.Layout.MainLayout
@inject IJSRuntime JS
@inject NavigationManager Navigation




<style>
    /* Main Container */
    .main-container {
        max-height: 100vh;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        gap: 20px;
        padding: 20px;
    }

    .child-container {
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .child-container h5 {
            text-align: center;
            margin-bottom: 15px;
        }

    /* Balance Box */
    .balance-box {
        text-align: center;
        padding: 15px;
        border-radius: 8px;
        background-color: #f8f9fa;
    }

        .balance-box.available {
            border: 2px solid #28a745;
        }

        .balance-box.debt {
            border: 2px solid #dc3545;
        }

    /* Calendar Popup */
    .calendar-popup {
        position: absolute;
        background: #fff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        padding: 15px;
        z-index: 1000;
    }

        .calendar-popup input {
            margin-bottom: 10px;
        }

    .calendar-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.2);
        z-index: 999;
    }

    /* Transaction Form */
    .transaction-form {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

        .transaction-form label {
            font-weight: bold;
        }

        .transaction-form button {
            margin-top: 10px;
        }

    /* Container 5 Specific Styles */
    .child-container {
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

        .child-container h5 {
            text-align: center;
            margin-bottom: 15px;
            font-size: 1.5rem;
            color: #343a40;
        }

    .sub-container {
        margin-bottom: 20px;
        padding: 10px;
        background-color: #f8f9fa;
        border-radius: 8px;
        border: 1px solid #dee2e6;
    }

        .sub-container label {
            font-weight: bold;
            font-size: 1.1rem;
            display: block;
            margin-bottom: 5px;
            color: #495057;
        }

    .tag-display {
        font-size: 1.4rem;
        font-weight: bold;
        color: #007bff;
        margin-bottom: 10px;
        text-align: center;
    }

    .table-responsive {
        max-height: 300px;
        overflow-y: auto;
    }

    .table {
        margin-bottom: 0;
        width: 100%;
        text-align: center;
        border-collapse: collapse;
    }

    .table-bordered {
        border: 1px solid #dee2e6;
    }

        .table-bordered th,
        .table-bordered td {
            text-align: center;
            vertical-align: middle;
            padding: 8px;
            border: 1px solid #dee2e6;
        }

    .table-light th {
        background-color: #f8f9fa;
        color: #495057;
        font-weight: bold;
    }

    .table tbody tr:nth-child(odd) {
        background-color: #f1f3f5;
    }

    .table tbody tr:nth-child(even) {
        background-color: #fff;
    }
</style>

<div class="container-fluid main-container">
    <h1 class="text-center mb-4">User Dashboard</h1>

    <div class="child-container">
        <h5>User Info & Actions</h5>
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="balance-box available">
                    <h6>Available Balance</h6>
                    <p class="fs-4 fw-bold">@requiredDetails.CurrencyTypeUser :@GetUserAvailableBalance()</p>
                </div>
            </div>
            <div class="col-md-6">
                <div class="balance-box debt">
                    <h6>Debt Balance</h6>
                    <p class="fs-4 fw-bold">@requiredDetails.CurrencyTypeUser : @GetUserDebtBalance()</p>
                </div>
            </div>
        </div>
        <div class="d-flex flex-wrap gap-2 justify-content-center">
            <button class="btn btn-primary" @onclick="ToggleDateRangePicker">
                Sort <i class="bi bi-calendar"></i>
            </button>
            <button class="btn btn-secondary" @onclick="UpdateTittleTransactions">Update Title for transactions.</button>
            <button class="btn btn-secondary" @onclick="UpdateNoteTransactions">Update Note for transactions.</button>
            <button class="btn btn-secondary" @onclick="UpdateTittleDebt">Update Title for debt.</button>
            <button class="btn btn-secondary" @onclick="UpdateNoteDebt">Update Note for debt.</button>
            <button class="btn btn-secondary" @onclick="CheckOutflow">Check Outflow</button>
            <button class="btn btn-secondary" @onclick="ClearDebt">Clear Debt</button>
            <button class="btn btn-danger" @onclick="Logout">Logout</button>
        </div>
    </div>

    @if (IsDateRangePickerVisible)
    {
        <div class="calendar-overlay" @onclick="ToggleDateRangePicker"></div>
        <div class="calendar-popup">
            <h6>Select Date Range</h6>
            <label>From Date:</label>
            <input type="date" class="form-control" @bind="FromDate" />
            <label>To Date:</label>
            <input type="date" class="form-control" @bind="ToDate" />
        </div>
    }

    <div class="child-container">
        <h5>Transaction Form</h5>
        <form class="transaction-form">
            <label>Transaction Flow</label>

            <select class="form-select" @bind="TransactionsFlow">
                <option selected>Select the TransactionsFlow.</option>
                <option value="In">In</option>
                <option value="Out">Out</option>
            </select>

            <label>Transaction Type</label>
            <select class="form-select" @bind="TransactionsType">
                <option selected>Select the TransactionsType.</option>
                <option value="Credit">Credit</option>
                <option value="Debit">Debit</option>
            </select>

            <label>Transaction Date</label>
            <input type="date" @bind="TransactionsDate" class="form-control" />

            <label>Transaction Amount</label>
            <input type="number" @bind="TransactionsAmount" class="form-control" placeholder="Enter amount" />

            <label>Transaction Note</label>
            <input type="text" @bind="TransactionsNote" class="form-control" placeholder="Enter note" />

            <label>Transaction Title</label>
            <input type="text" @bind="TransactionsTittle" class="form-control" placeholder="Enter title" />

            <label>Transaction Source</label>
            <input type="text" @bind="TransactionsSource" class="form-control" placeholder="Enter source" />

            <label>Transaction ID (For Update Only)</label>
            <input type="text" @bind="TransactionsId" class="form-control" placeholder="Enter transactions ID" />

            <label>Debt ID (For Update Only)</label>
            <input type="text" @bind="DebtId" class="form-control" placeholder="Enter debt ID" />

            <button type="button" @onclick="DoTransactions" class="btn btn-success w-100 mt-3">Do  Transaction</button>
        </form>
    </div>

    <div class="child-container">
        <h5>Transaction Details</h5>
        <div class="d-flex justify-content-between align-items-center mb-3">
            <label class="fw-bold">All Transactions</label>
            <input type="text" class="form-control w-50" placeholder="Search by title" @bind="SearchTittleTransactions" />
            <select class="form-select w-auto" @bind="SortTansactionsType">
                <option selected>Select filter type.</option>
                <option value="Credit">Credit</option>
                <option value="Debit">Debit</option>
                <option value="Debt">Debt</option>
            </select>
        </div>

        <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
            <table class="table table-bordered">
                <thead class="table-light">
                    <tr>
                        <th>ID</th>
                        <th>Type</th>
                        <th>Title</th>
                        <th>Flow</th>
                        <th>Date</th>
                        <th>Source</th>
                        <th>Note</th>
                        <th>Amount</th>
                        <th>Username</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (
                        !FromDate.HasValue && !ToDate.HasValue &&
                        !String.IsNullOrEmpty(SearchTittleTransactions) &&
                        !String.IsNullOrEmpty(SortTansactionsType)


                        )
                        {
                            @foreach (var data in requiredDetails.transactions_info_list.ToList())
                            {
                                <tr>
                                    <td>@data.TrId</td>
                                    <td>@data.TrType</td>
                                    <td>@data.TrTitle</td>
                                    <td>@data.TrFlow</td>
                                    <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                    <td>@data.TrSource</td>
                                    <td>@data.TrNote</td>
                                    <td>@data.TrAmount.ToString("C")</td>
                                    <td>@data.UserUsername</td>
                                </tr>
                            }
                        }
                        else
                        {
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.TrDate >= FromDate && x.TrDate <= ToDate).ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }

                            else if (!String.IsNullOrEmpty(SearchTittleTransactions))
                            {
                                var user_data = requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrTitle == SearchTittleTransactions).ToList();
                                if (user_data != null)
                                {
                                    @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrTitle == SearchTittleTransactions).ToList())
                                    {
                                        <tr>
                                            <td>@data.TrId</td>
                                            <td>@data.TrType</td>
                                            <td>@data.TrTitle</td>
                                            <td>@data.TrFlow</td>
                                            <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                            <td>@data.TrSource</td>
                                            <td>@data.TrNote</td>
                                            <td>@data.TrAmount.ToString("C")</td>
                                            <td>@data.UserUsername</td>
                                        </tr>
                                    }
                                }

                                else
                                {
                                    <tr>

                                        <td>No data available of that tittle..</td>

                                    </tr>
                                }

                            }

                            else if (!String.IsNullOrEmpty(SortTansactionsType))
                            {
                                var user_data = requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrType == SortTansactionsType).ToList();
                                if (user_data != null)
                                {
                                    @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrType == SortTansactionsType).ToList())
                                    {
                                        <tr>
                                            <td>@data.TrId</td>
                                            <td>@data.TrType</td>
                                            <td>@data.TrTitle</td>
                                            <td>@data.TrFlow</td>
                                            <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                            <td>@data.TrSource</td>
                                            <td>@data.TrNote</td>
                                            <td>@data.TrAmount.ToString("C")</td>
                                            <td>@data.UserUsername</td>
                                        </tr>
                                    }
                                }
                                else
                                {

                                    <tr>

                                        <td>No data available of that type.</td>

                                    </tr>
                                }

                            }
                            else
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }



                        }


                    }

                </tbody>
            </table>
        </div>
    </div>
    <div class="child-container">
        <h5>Debt Transactions Details</h5>

        <div class="mb-4">
            <label class="fw-bold">All Debt Transactions</label>
            <div class="table-responsive" style="max-height: 300px; overflow-y: auto;">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Debt ID</th>
                            <th>Transaction Type</th>
                            <th>Debt Title</th>
                            <th>Debt Date</th>
                            <th>Debt Source</th>
                            <th>Debt Amount</th>
                            <th>Transaction Flow</th>
                            <th>Debt Status</th>
                            <th>Transaction Status</th>
                            <th>Username</th>
                            <th>Debt Note</th>

                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.debt_info_list.Where(x => x.DebtDate >= FromDate && x.DebtDate <= ToDate).ToList())
                                {
                                    <tr>
                                        <td>@data.DebtId</td>
                                        <td>@data.TransactionType</td>
                                        <td>@data.DebtTitle</td>
                                        <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.DebtSource</td>
                                        <td>@data.DebtAmount.ToString("C")</td>
                                        <td>@data.TransactionFlow</td>
                                        <td>@data.DebtStatus</td>
                                        <td>@data.TransactionStatus</td>
                                        <td>@data.Username</td>
                                        <td>@data.DebtNote</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @foreach (var data in requiredDetails.debt_info_list.ToList())
                                {
                                    <tr>
                                        <td>@data.DebtId</td>
                                        <td>@data.TransactionType</td>
                                        <td>@data.DebtTitle</td>
                                        <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.DebtSource</td>
                                        <td>@data.DebtAmount.ToString("C")</td>
                                        <td>@data.TransactionFlow</td>
                                        <td>@data.DebtStatus</td>
                                        <td>@data.TransactionStatus</td>
                                        <td>@data.Username</td>
                                        <td>@data.DebtNote</td>
                                    </tr>
                                }
                            }

                        }


                    </tbody>
                </table>
            </div>
        </div>

        <div class="mb-4">
            <label class="fw-bold">Pending Debt to Pay</label>
            <div class="table-responsive" style="max-height: 300px; overflow-y: auto;">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Debt ID</th>
                            <th>Transaction Type</th>
                            <th>Debt Title</th>
                            <th>Debt Date</th>
                            <th>Debt Source</th>
                            <th>Debt Amount</th>
                            <th>Transaction Flow</th>
                            <th>Debt Status</th>
                            <th>Transaction Status</th>
                            <th>Username</th>
                            <th>Debt Note</th>
                        </tr>
                    </thead>
                    <tbody>

                        @{
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.debt_info_list.Where(x => x.DebtDate >= FromDate && x.DebtDate <= ToDate && x.DebtStatus == "to pay").ToList())
                                {
                                    <tr>
                                        <td>@data.DebtId</td>
                                        <td>@data.TransactionType</td>
                                        <td>@data.DebtTitle</td>
                                        <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.DebtSource</td>
                                        <td>@data.DebtAmount.ToString("C")</td>
                                        <td>@data.TransactionFlow</td>
                                        <td>@data.DebtStatus</td>
                                        <td>@data.TransactionStatus</td>
                                        <td>@data.Username</td>
                                        <td>@data.DebtNote</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @foreach (var data in requiredDetails.debt_info_list.Where(debt => debt.DebtStatus == "to pay"))
                                {
                                    <tr>
                                        <td>@data.DebtId</td>
                                        <td>@data.TransactionType</td>
                                        <td>@data.DebtTitle</td>
                                        <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.DebtSource</td>
                                        <td>@data.DebtAmount.ToString("C")</td>
                                        <td>@data.TransactionFlow</td>
                                        <td>@data.DebtStatus</td>
                                        <td>@data.TransactionStatus</td>
                                        <td>@data.Username</td>
                                        <td>@data.DebtNote</td>
                                    </tr>
                                }
                            }

                        }


                    </tbody>
                </table>
            </div>
        </div>

        <div>
            <label class="fw-bold">Clear Debt</label>
            <div class="table-responsive" style="max-height: 300px; overflow-y: auto;">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Debt ID</th>
                            <th>Transaction Type</th>
                            <th>Debt Title</th>
                            <th>Debt Date</th>
                            <th>Debt Source</th>
                            <th>Debt Amount</th>
                            <th>Transaction Flow</th>
                            <th>Debt Status</th>
                            <th>Transaction Status</th>
                            <th>Username</th>
                            <th>Debt Note</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.debt_info_list.Where(x => x.DebtDate >= FromDate && x.DebtDate <= ToDate && x.DebtStatus == "paid").ToList())
                                {
                                    <tr>
                                        <td>@data.DebtId</td>
                                        <td>@data.TransactionType</td>
                                        <td>@data.DebtTitle</td>
                                        <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.DebtSource</td>
                                        <td>@data.DebtAmount.ToString("C")</td>
                                        <td>@data.TransactionFlow</td>
                                        <td>@data.DebtStatus</td>
                                        <td>@data.TransactionStatus</td>
                                        <td>@data.Username</td>
                                        <td>@data.DebtNote</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @foreach (var data in requiredDetails.debt_info_list.Where(debt => debt.DebtStatus == "paid"))
                                {
                                    <tr>
                                        <td>@data.DebtId</td>
                                        <td>@data.TransactionType</td>
                                        <td>@data.DebtTitle</td>
                                        <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.DebtSource</td>
                                        <td>@data.DebtAmount.ToString("C")</td>
                                        <td>@data.TransactionFlow</td>
                                        <td>@data.DebtStatus</td>
                                        <td>@data.TransactionStatus</td>
                                        <td>@data.Username</td>
                                        <td>@data.DebtNote</td>
                                    </tr>
                                }
                            }

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="child-container">
        <h5>Total Inflow, Outflow, and Highlights</h5>

        <div class="sub-container">
            <label>Total Inflow:</label>
            <p class="tag-display">@requiredDetails.CurrencyTypeUser : @TotalInflow</p>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Type</th>
                            <th>Title</th>
                            <th>Flow</th>
                            <th>Date</th>
                            <th>Source</th>
                            <th>Note</th>
                            <th>Amount</th>
                            <th>Username</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.TrDate >= FromDate && x.TrDate <= ToDate && x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "In").ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "In").ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }

                        }

                    </tbody>
                </table>
            </div>
        </div>

        <div class="sub-container">
            <label>Total Outflow:</label>
            <p class="tag-display">@requiredDetails.CurrencyTypeUser : @TotalOutflow </p>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Type</th>
                            <th>Title</th>
                            <th>Flow</th>
                            <th>Date</th>
                            <th>Source</th>
                            <th>Note</th>
                            <th>Amount</th>
                            <th>Username</th>
                        </tr>

                    </thead>
                    <tbody>
                        @{
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.TrDate >= FromDate && x.TrDate <= ToDate && x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "Out").ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "Out").ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }

                        }

                    </tbody>
                </table>
            </div>
        </div>

        <div class="sub-container">
            <label>Highest Inflow:</label>
            <p class="tag-display">@requiredDetails.CurrencyTypeUser : @HighestInflowTransaction</p>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Type</th>
                            <th>Title</th>
                            <th>Flow</th>
                            <th>Date</th>
                            <th>Source</th>
                            <th>Note</th>
                            <th>Amount</th>
                            <th>Username</th>
                        </tr>

                    </thead>
                    <tbody>

                        @{
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.TrDate >= FromDate && x.TrDate <= ToDate && x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "In" && x.TrAmount.ToString() == HighestInflowTransaction.ToString()).ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "In" && x.TrAmount.ToString() == HighestInflowTransaction.ToString()).ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }

                        }

                    </tbody>
                </table>
            </div>
        </div>

        <div class="sub-container">
            <label>Lowest Inflow:</label>
            <p class="tag-display">@requiredDetails.CurrencyTypeUser : @LowestInflowTransaction</p>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Type</th>
                            <th>Title</th>
                            <th>Flow</th>
                            <th>Date</th>
                            <th>Source</th>
                            <th>Note</th>
                            <th>Amount</th>
                            <th>Username</th>
                        </tr>

                    </thead>
                    <tbody>
                        @{
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.TrDate >= FromDate && x.TrDate <= ToDate && x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "In" && x.TrAmount.ToString() == LowestInflowTransaction.ToString()).ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "In" && x.TrAmount.ToString() == LowestInflowTransaction.ToString()).ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }

                        }

                    </tbody>
                </table>
            </div>
        </div>

        <div class="sub-container">
            <label>Highest Outflow:</label>
            <p class="tag-display">@requiredDetails.CurrencyTypeUser: @HighestOutflowTransaction</p>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Type</th>
                            <th>Title</th>
                            <th>Flow</th>
                            <th>Date</th>
                            <th>Source</th>
                            <th>Note</th>
                            <th>Amount</th>
                            <th>Username</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.TrDate >= FromDate && x.TrDate <= ToDate && x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "Out" && x.TrAmount.ToString() == HighestOutflowTransaction.ToString()).ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "Out" && x.TrAmount.ToString() == HighestOutflowTransaction.ToString()).ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }

                        }

                    </tbody>
                </table>
            </div>
        </div>

        <div class="sub-container">
            <label>Lowest Outflow:</label>
            <p class="tag-display">@requiredDetails.CurrencyTypeUser : @LowestOutflowTransaction</p>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Type</th>
                            <th>Title</th>
                            <th>Flow</th>
                            <th>Date</th>
                            <th>Source</th>
                            <th>Note</th>
                            <th>Amount</th>
                            <th>Username</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (FromDate.HasValue && ToDate.HasValue)
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.TrDate >= FromDate && x.TrDate <= ToDate && x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "Out" && x.TrAmount.ToString() == LowestOutflowTransaction.ToString()).ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @foreach (var data in requiredDetails.transactions_info_list.Where(x => x.UserUsername == requiredDetails.CurrentUserUsername && x.TrFlow == "Out" && x.TrAmount.ToString() == LowestOutflowTransaction.ToString()).ToList())
                                {
                                    <tr>
                                        <td>@data.TrId</td>
                                        <td>@data.TrType</td>
                                        <td>@data.TrTitle</td>
                                        <td>@data.TrFlow</td>
                                        <td>@data.TrDate.ToString("yyyy-MM-dd")</td>
                                        <td>@data.TrSource</td>
                                        <td>@data.TrNote</td>
                                        <td>@data.TrAmount.ToString("C")</td>
                                        <td>@data.UserUsername</td>
                                    </tr>
                                }
                            }

                        }


                    </tbody>
                </table>
            </div>
        </div>

        <div class="child-container">
            <h5>Debt Transactions Details</h5>

            <div class="mb-4">
                <label class="fw-bold">Lowest Debt</label>
                <p class="tag-display" id="lowest-debt-amount">@requiredDetails.CurrencyTypeUser : @LowestDebt</p>
                <div class="table-responsive" style="max-height: 300px; overflow-y: auto;">
                    <table class="table table-bordered">
                        <thead class="table-light">
                            <tr>
                                <th>Debt ID</th>
                                <th>Transaction Type</th>
                                <th>Debt Title</th>
                                <th>Debt Date</th>
                                <th>Debt Source</th>
                                <th>Debt Amount</th>
                                <th>Transaction Flow</th>
                                <th>Debt Status</th>
                                <th>Transaction Status</th>
                                <th>Username</th>
                                <th>Debt Note</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                if (FromDate.HasValue && ToDate.HasValue)
                                {
                                    @foreach (var data in requiredDetails.debt_info_list.Where(x => x.DebtDate >= FromDate && x.DebtDate <= ToDate && x.Username == requiredDetails.CurrentUserUsername && x.TransactionType == "Debt" && x.DebtAmount.ToString() == LowestDebt.ToString()).ToList())
                                    {
                                        <tr>
                                            <td>@data.DebtId</td>
                                            <td>@data.TransactionType</td>
                                            <td>@data.DebtTitle</td>
                                            <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                            <td>@data.DebtSource</td>
                                            <td>@data.DebtAmount.ToString("C")</td>
                                            <td>@data.TransactionFlow</td>
                                            <td>@data.DebtStatus</td>
                                            <td>@data.TransactionStatus</td>
                                            <td>@data.Username</td>
                                            <td>@data.DebtNote</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    @foreach (var data in requiredDetails.debt_info_list.Where(x => x.Username == requiredDetails.CurrentUserUsername && x.TransactionType == "Debt" && x.DebtAmount.ToString() == LowestDebt.ToString()).ToList())
                                    {
                                        <tr>
                                            <td>@data.DebtId</td>
                                            <td>@data.TransactionType</td>
                                            <td>@data.DebtTitle</td>
                                            <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                            <td>@data.DebtSource</td>
                                            <td>@data.DebtAmount.ToString("C")</td>
                                            <td>@data.TransactionFlow</td>
                                            <td>@data.DebtStatus</td>
                                            <td>@data.TransactionStatus</td>
                                            <td>@data.Username</td>
                                            <td>@data.DebtNote</td>
                                        </tr>
                                    }
                                }

                            }

                        </tbody>
                    </table>
                </div>
            </div>

            <div class="mb-4">
                <label class="fw-bold">Highest Debt</label>
                <p class="tag-display" id="highest-debt-amount">@requiredDetails.CurrencyTypeUser : @HighestDebt</p>
                <div class="table-responsive" style="max-height: 300px; overflow-y: auto;">
                    <table class="table table-bordered">
                        <thead class="table-light">
                            <tr>
                                <th>Debt ID</th>
                                <th>Transaction Type</th>
                                <th>Debt Title</th>
                                <th>Debt Date</th>
                                <th>Debt Source</th>
                                <th>Debt Amount</th>
                                <th>Transaction Flow</th>
                                <th>Debt Status</th>
                                <th>Transaction Status</th>
                                <th>Username</th>
                                <th>Debt Note</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                if (FromDate.HasValue && ToDate.HasValue)
                                {
                                    @foreach (var data in requiredDetails.debt_info_list.Where(x => x.DebtDate >= FromDate && x.DebtDate <= ToDate && x.Username == requiredDetails.CurrentUserUsername && x.TransactionType == "Debt" && x.DebtAmount.ToString() == HighestDebt.ToString()).ToList())
                                    {
                                        <tr>
                                            <td>@data.DebtId</td>
                                            <td>@data.TransactionType</td>
                                            <td>@data.DebtTitle</td>
                                            <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                            <td>@data.DebtSource</td>
                                            <td>@data.DebtAmount.ToString("C")</td>
                                            <td>@data.TransactionFlow</td>
                                            <td>@data.DebtStatus</td>
                                            <td>@data.TransactionStatus</td>
                                            <td>@data.Username</td>
                                            <td>@data.DebtNote</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    @foreach (var data in requiredDetails.debt_info_list.Where(x => x.Username == requiredDetails.CurrentUserUsername && x.TransactionType == "Debt" && x.DebtAmount.ToString() == HighestDebt.ToString()).ToList())
                                    {
                                        <tr>
                                            <td>@data.DebtId</td>
                                            <td>@data.TransactionType</td>
                                            <td>@data.DebtTitle</td>
                                            <td>@data.DebtDate.ToString("yyyy-MM-dd")</td>
                                            <td>@data.DebtSource</td>
                                            <td>@data.DebtAmount.ToString("C")</td>
                                            <td>@data.TransactionFlow</td>
                                            <td>@data.DebtStatus</td>
                                            <td>@data.TransactionStatus</td>
                                            <td>@data.Username</td>
                                            <td>@data.DebtNote</td>
                                        </tr>
                                    }
                                }

                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</div> 

<script>
    function showAlert(message) {
    alert(message);
    }

    function showConfirm(message, dotNetHelper) {
    if (confirm(message)) {
    dotNetHelper.invokeMethodAsync("ProceedWithDebt");
    } else {
    dotNetHelper.invokeMethodAsync("CancelTransaction");
    }
    }

</script>

